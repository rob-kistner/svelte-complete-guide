{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Description.svelte",
    "../src/App.svelte",
    "../src/PasswordField.svelte"
  ],
  "sourcesContent": [
    "<style>\n  p, li {\n    font-size: 1.1rem;\n  }\n  li {\n    margin-bottom: 1rem;\n    padding-left: 0.75rem;\n  }\n</style>\n\n<h1>Assignment</h1>\n\n<p>Solve these tasks.</p>\n\n<ol>\n  <li>Add a password input field and save the user input in a variable.</li>\n  <li>Output \"Too short\" if the password is shorter than 5 characters and \"Too long\" if it's longer than 10.</li>\n  <li>Output the password in a paragraph tag if it's between these boundaries.</li>\n  <li>Add a button and let the user add the passwords to an array.</li>\n  <li>Output the array values (= passwords) in a unordered list (ul tag).</li>\n  <li>Bonus: If a password is clicked, remove it from the list.</li>\n</ol>\n",
    "<script>\n  import Description from './Description.svelte'\n  import PasswordField from './PasswordField.svelte'\n</script>\n\n<style>\n  .container {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  hr {\n    margin: 2.5rem 0;\n  }\n</style>\n\n<!-- main page -->\n<div class=\"container\">\n\n  <PasswordField />\n\n  <hr>\n \n  <Description />\n\n</div>",
    "<script>\n  let password = ''\n  let passwordsArray = []\n  let passwordWarning = ''\n\n  $: passwordIsValid = (password.length >= 5 && password.length <= 10)\n  \n  function addPassword()\n  {\n    passwordsArray = [...passwordsArray, password]\n    password = ''\n  }\n\n  function removePasswordOld(e)\n  {\n    const idx = e.target.getAttribute('href')\n    passwordsArray.splice(idx, 1)\n    passwordsArray = [...passwordsArray]\n  }\n\n  function removePassword(e)\n  {\n    const idx = e.target.getAttribute('href')\n    passwordsArray = passwordsArray.filter( (pw, i) => idx != i )\n    console.log(passwordsArray)\n  }\n\n</script>\n\n<style>\n  label {\n    font-size: 1.2em;\n    margin-bottom: 1rem;\n  }\n  input[type='password'] {\n    width: 100%;\n    max-width: 100%;\n    font-size: 1.4rem;\n    padding: 0.625rem 1rem;\n  }\n  input[type='password']::placeholder {\n    color: #ccc;\n  }\n  .password-view {\n    font-size: 1.4rem;\n    color: darkblue;\n    margin: 0.25rem 1rem;\n  }\n  .password-view span {\n    color: red;\n  }\n  .password-warning {\n    padding: 0.5rem 1rem;\n    background-color: red;\n    color: white;\n    font-weight: 70;\n  }\n  button {\n    margin-top: 1rem;\n    cursor: pointer;\n  }\n\n</style>\n\n<label>Enter your password</label>\n<input type=\"password\" bind:value={password} placeholder=\"Your password\">\n<p class=\"password-view\">\n{#if password.length < 5 && password.length > 0 }\n  <span>Too short</span>\n{:else if password.length > 10}\n  <span>Too long</span>\n{:else if passwordIsValid}\n  {password}\n{/if}\n</p>\n\n{#if passwordIsValid}\n  <button on:click={addPassword}>Add This Password</button>\n{/if}\n\n{#if passwordsArray.length > 0}\n<h3>Current Passwordsâ€¦</h3>\n<ul>\n  {#each passwordsArray as pw, i}\n    <li>\n      <a href={i} on:click|preventDefault={removePassword}>{pw}</a>\n    </li>\n  {/each}\n</ul>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AACE,gBAAC,CAAE,EAAE,eAAC,CAAC,AACL,SAAS,CAAE,MAAM,AACnB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,aAAa,CAAE,IAAI,CACnB,YAAY,CAAE,OAAO,AACvB,CAAC;ACDD,UAAU,cAAC,CAAC,AACV,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,MAAM,CAAE,MAAM,CAAC,CAAC,AAClB,CAAC;ACkBD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,KAAK,CAChB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAC,CAAC,AACtB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,QAAQ,CAAC,IAAI,AACxB,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,eAAC,aAAa,AAAC,CAAC,AACnC,KAAK,CAAE,IAAI,AACb,CAAC,AACD,cAAc,cAAC,CAAC,AACd,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,QAAQ,CACf,MAAM,CAAE,OAAO,CAAC,IAAI,AACtB,CAAC,AACD,4BAAc,CAAC,IAAI,cAAC,CAAC,AACnB,KAAK,CAAE,GAAG,AACZ,CAAC,AAOD,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,OAAO,AACjB,CAAC"
}